name: SDK Build and Publish
on:
  workflow_dispatch:
  
env:
  CONTAINER_BASE_IMAGE: "mcr.microsoft.com/dotnet/aspnet:8.0"
  CONTAINER_REG: "registry.hub.docker.com"
  CONTAINER_REPO: "lancemccarthy/secretsmocker"
  
jobs:
  build_x64:
    runs-on: ubuntu-22.04
    outputs:
      build_tag: ${{ steps.build.outputs.build_tag }}
    env:
      target_arch: "x64"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate tag version
      id: tag-creator
      run: |
        buildDay=`date +%Y.%m.%d`
        tags="$buildDay.$GITHUB_RUN_NUMBER"
        echo "VERSION_TAG=$tags" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      run: docker login ${{ env.CONTAINER_REG }} -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PAT }}

    - name: build the x64 image
      id: build
      working-directory: src/SecretsMocker/SecretsMocker
      run: |
        dotnet publish -t:PublishContainer -p PublishProfile=DefaultContainer --arch x64 -p ContainerImageTag="${{steps.tag-creator.outputs.VERSION_TAG}}-${{env.target_arch}}" -p ContainerRepository=${{env.CONTAINER_REPO}} -p ContainerRegistry=${{env.CONTAINER_REG}} -p ContainerBaseImage=${{env.CONTAINER_BASE_IMAGE}}
        echo "build_tag=${{steps.tag-creator.outputs.VERSION_TAG}}-${{env.target_arch}}" >> $GITHUB_OUTPUT

  build_arm64:
    runs-on: ubuntu-22.04
    outputs:
      build_tag: ${{ steps.build.outputs.build_tag }}
    env:
      target_arch: "arm64"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate tag version
      id: tag-creator
      run: |
        buildDay=`date +%Y.%m.%d`
        tags="$buildDay.$GITHUB_RUN_NUMBER"
        echo "VERSION_TAG=$tags" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      run: docker login ${{ env.CONTAINER_REG }} -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PAT }}

    - name: build the arm64 image
      id: build
      working-directory: src/SecretsMocker/SecretsMocker
      run: |
        dotnet publish -t:PublishContainer -p PublishProfile=DefaultContainer --arch arm64 -p ContainerImageTag="${{steps.tag-creator.outputs.VERSION_TAG}}-${{env.target_arch}}" -p ContainerRepository=${{env.CONTAINER_REPO}} -p ContainerRegistry=${{env.CONTAINER_REG}} -p ContainerBaseImage=${{ env.CONTAINER_BASE_IMAGE }}
        echo "build_tag=${{steps.tag-creator.outputs.VERSION_TAG}}-${{env.target_arch}}" >> $GITHUB_OUTPUT

  build_arm:
    runs-on: ubuntu-22.04
    outputs:
      build_tag: ${{ steps.build.outputs.build_tag }}
    env:
      target_arch: "arm"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate tag version
      id: tag-creator
      run: |
        buildDay=`date +%Y.%m.%d`
        tags="$buildDay.$GITHUB_RUN_NUMBER"
        echo "VERSION_TAG=$tags" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      run: docker login ${{ env.CONTAINER_REG }} -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PAT }}

    - name: build the arm image
      id: build
      working-directory: src/SecretsMocker/SecretsMocker
      run: |
        dotnet publish -t:PublishContainer -p PublishProfile=DefaultContainer --arch arm -p ContainerImageTag="${{steps.tag-creator.outputs.VERSION_TAG}}-${{env.target_arch}}" -p ContainerRepository=${{env.CONTAINER_REPO}} -p ContainerRegistry=${{env.CONTAINER_REG}} -p ContainerBaseImage=${{ env.CONTAINER_BASE_IMAGE }}
        echo "build_tag=${{steps.tag-creator.outputs.VERSION_TAG}}-${{env.target_arch}}" >> $GITHUB_OUTPUT

  publish_combined_manifest:
    runs-on: ubuntu-22.04
    needs: [build_x64, build_arm64, build_arm]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Login to Docker Hub
      run: docker login ${{ env.CONTAINER_REG }} -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PAT }}

    - name: create the multi-image manifest
      run: |
        docker manifest create "${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:latest" \
          ${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:$X86_TAG \
          ${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:$ARM64_TAG \
          ${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:$ARM_TAG
        
        docker manifest push "${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:latest"
      env:
        X86_TAG: ${{needs.build_x64.outputs.build_tag}}
        ARM64_TAG: ${{needs.build_arm64.outputs.build_tag}}
        ARM_TAG: ${{needs.build_arm.outputs.build_tag}}
        
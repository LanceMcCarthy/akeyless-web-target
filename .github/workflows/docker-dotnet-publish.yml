name: SDK Build and Publish
on:
  workflow_dispatch:
  
env:
  CONTAINER_BASE_IMAGE: "mcr.microsoft.com/dotnet/aspnet:8.0"
  CONTAINER_REG: "registry.hub.docker.com"
  CONTAINER_REPO: "lancemccarthy/secretsmocker"
  CONTAINER_TAG: "latest"
  
jobs:
  build_api:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate tag version
      id: tag-creator
      run: |
        buildDay=`date +%Y.%m.%d`
        tags="$buildDay.$GITHUB_RUN_NUMBER"
        echo "VERSION_TAG=$tags" >> $GITHUB_OUTPUT

    - name: Verify tag output
      run: echo ${{ steps.tag-creator.outputs.VERSION_TAG }}

    - name: Login to Docker Hub
      run: docker login ${{ env.CONTAINER_REG }} -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PAT }}

    - name: build the x64 image
      id: build-x64
      working-directory: src/SecretsMocker/SecretsMocker
      run: |
        dotnet publish -t:PublishContainer -p PublishProfile=DefaultContainer --arch x64 -p ContainerImageTag="${{steps.tag-creator.outputs.VERSION_TAG}}-x64" -p ContainerRepository=${{env.CONTAINER_REPO}} -p ContainerRegistry=${{env.CONTAINER_REG}} -p ContainerBaseImage=${{ env.CONTAINER_BASE_IMAGE }}
        echo "FULL_ID=${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:${{env.CONTAINER_TAG}}-x64" >> $GITHUB_OUTPUT

    - name: build the arm64 image
      id: build-arm64
      working-directory: src/SecretsMocker/SecretsMocker
      run: |
        dotnet publish -t:PublishContainer -p PublishProfile=DefaultContainer --arch arm64 -p ContainerImageTag="${{steps.tag-creator.outputs.VERSION_TAG}}-arm64" -p ContainerRepository=${{env.CONTAINER_REPO}} -p ContainerRegistry=${{env.CONTAINER_REG}} -p ContainerBaseImage=${{ env.CONTAINER_BASE_IMAGE }}
        echo "FULL_ID=${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:${{env.CONTAINER_TAG}}-arm64" >> $GITHUB_OUTPUT

    - name: build the arm image
      id: build-arm
      working-directory: src/SecretsMocker/SecretsMocker
      run: |
        dotnet publish -t:PublishContainer -p PublishProfile=DefaultContainer --arch arm -p ContainerImageTag="${{steps.tag-creator.outputs.VERSION_TAG}}-arm" -p ContainerRepository=${{env.CONTAINER_REPO}} -p ContainerRegistry=${{env.CONTAINER_REG}} -p ContainerBaseImage=${{ env.CONTAINER_BASE_IMAGE }}
        echo "FULL_ID=${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:${{env.CONTAINER_TAG}}-arm" >> $GITHUB_OUTPUT

    - name: create the multi-image manifest
      run: |
        docker manifest create "${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:${{env.CONTAINER_TAG}}" \
          ${{ steps.build-x64.outputs.FULL_ID }} \
          ${{ steps.build-arm64.outputs.FULL_ID }} \
          ${{ steps.build-arm.outputs.FULL_ID }}
        
        docker manifest push "${{env.CONTAINER_REG}}/${{env.CONTAINER_REPO}}:${{env.CONTAINER_TAG}}"
